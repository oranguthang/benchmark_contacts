services:
  python_db:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: contacts_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 5s
      retries: 5

  python_aiohttp:
    build: ./python_aiohttp
    environment:
      DATABASE_URL: postgres://user:password@python_db:5432/contacts_db
    networks:
      - backend
    ports:
      - "8080:8080"
    depends_on:
      python_db:
        condition: service_healthy

  benchmark_python:
    build: ./benchmark_client
    depends_on:
      - python_aiohttp
    command:
      [
        "./benchmark",
        "--base-url=http://python_aiohttp:8080",
        "--post-count=10000",
        "--get-count=10000",
        "--post-workers=100",
        "--get-workers=100"
      ]
    networks:
      - backend

  go_server:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      python_db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://postgres:postgres@python_db:5432/postgres
    ports:
      - "8081:8080"
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  pgdata:
